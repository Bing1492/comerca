import { describeVariation } from '@plasmicapp/loader-splits';
import type { Split } from '@plasmicapp/loader-fetcher';

export { describeVariation }

export declare const generateAllPaths: (path: string, seedRange?: number) => string[];

/**
 * Generates all possible paths with the given traits. Should be used to enable fallback false
 */
export declare function generateAllPathsWithTraits(path: string, traitValues?: Record<string, string[]>, seedRange?: number): string[];

export declare const getActiveVariation: (opts: {
    splits: Split[];
    traits: Record<string, string | number | boolean>;
    path: string;
    enableUnseededExperiments?: boolean;
}) => Record<string, string>;

export declare const getMiddlewareResponse: (opts: {
    path: string;
    traits: Traits;
    cookies: Record<string, string>;
    seedRange?: number;
}) => {
    pathname: string;
    cookies: {
        key: string;
        value: string;
    }[];
};

export declare const rewriteWithoutTraits: (url: string) => {
    path: string;
    traits: {};
};

export declare const rewriteWithTraits: (path: string, traits: Traits) => string;

declare type Traits = Record<string, string | number | boolean>;

export { }
