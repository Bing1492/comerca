export declare interface PlasmicRemoteChangeListener {
    onUpdate?: (projectId: string, revision: number) => void;
    onPublish?: (projectId: string, version: string) => void;
    onError?: (data: any) => void;
}

export declare class PlasmicRemoteChangeWatcher {
    private opts;
    private watchers;
    private socket;
    private host;
    constructor(opts: {
        projects: {
            id: string;
            token: string;
        }[];
        host?: string;
    });
    subscribe(watcher: PlasmicRemoteChangeListener): () => void;
    unsubscribe(watcher: PlasmicRemoteChangeListener): void;
    private connectSocket;
    private makeAuthHeaders;
    private ensureWatch;
}

export { }
